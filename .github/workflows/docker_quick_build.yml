name: Docker
on:
  pull_request:
jobs:
  docker:
    runs-on: ubuntu-latest
    name: "Docker build"
    steps:
      - name: "Decide tags to use"
        run: |
          if ${{ github.ref == 'refs/heads/main' }} == true; then
            echo 'TAG_EDGE=latest' >> $GITHUB_ENV
          elif ${{ github.ref == 'refs/heads/develop' }} == true; then
            echo 'TAG_EDGE=develop' >> $GITHUB_ENV
          else
            echo 'TAG_EDGE=edge' >> $GITHUB_ENV
          fi
      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v3
        with:
          images: davidzwa/fdm-monster
          # x.y.z versioning (not strictly 'vx.y.z' semver)
          tag-match: ^(\d+\.)?(\d+\.)?(\*|\d+)$
          tag-custom: |
            ${{env.TAG_EDGE}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashfiles('./server/docker/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: "Show docker tags"
        run: |
          echo '${{ steps.docker_meta.outputs.tags }}'
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:server"
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          file: ./docker/Dockerfile
          push: false
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
