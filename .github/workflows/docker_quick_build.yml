name: Docker
on:
  pull_request:
  push:
    branches:
      - 'main'
      - 'develop'
jobs:
  meta:
    runs-on: ubuntu-latest
    outputs:
      labels: ${{ steps.metadata.outputs.labels }}
    steps:
      - id: metadata
        uses: crazy-max/ghaction-docker-meta@v4
        with:
          images: davidzwa/fdm-monster

  docker:
    needs: [ meta ]
    runs-on: ubuntu-latest
    name: "Docker build"
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # Login to DockerHub with environment variables
      - name: Login to DockerHub
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # New intended logic
      # if branch is develop => push to dockerhub with tag 'develop'
      # if branch is main => push to dockerhub with tag 'main'

      - name: Tagging Strategy
        id: tagging
        uses: HackerHappyHour/tagging-strategy@v3
        with:
          image_name: davidzwa/fdm-monster
          tag_name: ${{ github.ref }}
          tags: |
            %X%
          extra_tags: |
            main::${{ github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main' }}
            develop::${{ github.ref == 'refs/heads/develop' || github.event.pull_request.base.ref == 'develop' }}

      # Show docker tags to be (conditionally) pushed
      - name: "Show docker tags"
        run: |
          echo '${{ github.ref }}'
          echo '${{ github.ref_type }}'
          echo '${{ github.event.pull_request.base.ref }}'
          echo '${{ steps.tagging.outputs.tags }}'

      # Speed up the build next time
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashfiles('./docker/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Clone the repo and build the image
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: "{{defaultContext}}:server"
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          file: ./docker/Dockerfile
          tags: ${{ steps.tagging.outputs.tags }}
          labels: ${{ needs.meta.outputs.labels }}

      # Show image digest output
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
