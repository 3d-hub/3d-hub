name: Node.js CI

on:
  push:
    branches: [ develop, main ]
  pull_request:
jobs:
  nodejs-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x

      # Cached pnpm install
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-           

      - run: pnpm install --frozen-lockfile
        working-directory: server
      - run: pnpm run test:cov
        working-directory: server

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: server-nodejs
          dry_run: ${{ matrix.node-version != '16.x' }}

      # https://stackoverflow.com/questions/57968497/how-do-i-set-an-env-var-with-a-bash-expression-in-github-actions
      - name: get-server-version
        working-directory: server
        # https://gist.github.com/DarrenN/8c6a5b969481725a4413?permalink_comment_id=3863317#gistcomment-3863317
        run: |
          echo "SERVER_VERSION=$(npm pkg get version | sed 's/"//g')" >> $GITHUB_ENV

      - name: set-tag
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            RELEASE_TAG="${{ env.SERVER_VERSION }}"
          else
            RELEASE_TAG="${{ env.SERVER_VERSION }}-${{ github.run_number }}"
          fi
          echo "RELEASE_TAG=${RELEASE_TAG}" >> $GITHUB_ENV

      - name: print-tag
        run: |
          echo ${{ env.RELEASE_TAG }}
