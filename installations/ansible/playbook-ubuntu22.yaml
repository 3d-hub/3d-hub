---
- name: Install NVM, Node.js 20 (LTS), Yarn, FDM Monster, and 7-Zip on Ubuntu 22.04
  hosts: all
  become: no
  vars_files:
    - vars/main.yml
  tasks:
    - name: Install nvm
      become: no
      shell: "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v{{ nvm_version }}/install.sh | bash"
      args:
        executable: /bin/bash
        chdir: "{{ ansible_env.HOME }}"
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

    - name: Set bash command
      set_fact:
        bash: "bash -ic"
        src_nvm: ". {{ ansible_env.HOME }}/.nvm/nvm.sh"

    - name: Install node
      become: no
      shell: "{{ bash }} 'nvm install {{ node_version }}'"
      args:
        executable: /bin/bash
        chdir: "{{ ansible_env.HOME }}"
        creates: "{{ ansible_env.HOME }}/.nvm/versions/{{ node_version }}"
      register: node_install_response
      changed_when: "'already installed' not in node_install_response.stderr"

    - name: "Set nvm used node version to {{ node_version }}"
      shell: "{{ bash }} 'nvm use {{ node_version }}'"
      register: nvm_use_response
      changed_when: nvm_use_response.rc != 0

    # - name: "Install yarn with npm"
    #   shell: "{{ bash }} 'npm list -g yarn || npm i -g yarn'"

    - name: "Install pm2 with yarn"
      shell: "{{ bash }} 'npm i -g add pm2'"

    # - name: "Make directory fdm-monster"
    #   file:
    #     path: "{{ ansible_env.HOME }}/.fdm-monster"
    #     state: directory
    #     owner: "{{ ansible_env.USER }}"
    #     group: "{{ ansible_env.USER }}"

    # - name: "Copy pm2 ecosystem file"
    #   copy:
    #     src: "./ecosystem.config.js"
    #     dest: "{{ ansible_env.HOME }}/.fdm-monster/ecosystem.config.js"
    #     owner: "{{ ansible_env.USER }}"
    #     group: "{{ ansible_env.USER }}"
    #     mode: "0644"

    - name: Ensure pm2 is not running
      command: "{{ bash }} 'pm2 kill'"

    - name: "Create /tmp/@fdm-monster as pm2 will fail without"
      file:
        path: "/tmp/@fdm-monster"
        state: directory
        owner: "{{ ansible_env.USER }}"
        group: "{{ ansible_env.USER }}"
        mode: "0755"

    - name: "Install @fdm-monster/server as pm2 module"
      shell: "{{ bash }} 'pm2 install @fdm-monster/server@{{fdmm_version}} -n fdmm'"

    - name: Set PM2 to start on reboot
      command: "{{ bash }} 'pm2 startup {{ pm2_startup_type }} -u {{ ansible_user }} --hp /home/{{ ansible_user }}'"

    - name: Save PM2
      command: "{{ bash }} 'pm2 save'"

    # - name: "Install fdm-monster/cli@{{cli_version}} with yarn"
    #   shell: "{{ bash }} 'yarn global add @fdm-monster/cli@{{cli_version}}'"
#    - name: "Install fdm-monster/server@{{fdmm_version}} and service"
#      shell: "{{bash}} 'yarn fdmm upgrade -tag {{ fdmm_version }}'"

# - name: Update apt packages cache
#   become: true
#   apt:
#     update_cache: yes
#   tags:
#     - mongodb

# - name: Install gnupg and curl
#   become: true
#   apt:
#     pkg:
#       - gnupg
#       - curl
#   tags:
#     - mongodb

# - name: Add MongoDb key
#   become: true
#   shell: |
#     curl -fsSL https://pgp.mongodb.com/server-6.0.asc | \
#     sudo gpg -o /usr/share/keyrings/mongodb-server-6.0.gpg \
#     --dearmor
#   tags:
#     - mongodb

# - name: Add MongoDB Repository
#   become: true
#   apt_repository:
#     repo: "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse"
#     state: present
#   tags:
#     - mongodb

# - name: Update apt packages cache
#   become: true
#   apt:
#     update_cache: yes
#   tags:
#     - mongodb

# - name: Install mongodb
#   become: true
#   apt:
#     pkg:
#       - mongodb-org=6.0.10
#       - mongodb-org-database=6.0.10
#       - mongodb-org-server=6.0.10
#       - mongodb-org-mongos=6.0.10
#       - mongodb-org-tools=6.0.10
#   tags:
#     - mongodb